<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd">
    <!-- 配置自动扫描的包 -->
    <!--<context:component-scan base-package="*"></context:component-scan>-->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/test"/>
        <property name="username" value="root"/>
        <property name="password" value="201919"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources">
            <!-- 或者用mappingLocations     *.hbm.xml-->
            <list>
                <value>Entity/user.hbm.xml</value>
            </list>
        </property>
        <!-- 设置Hibernate属性-->
        <property name="hibernateProperties">
            <!-- Hibernate4的jar中的hibernate的properties文件会覆盖掉dateSource配置信息，
             所以要在sessionFactory中重新配置！！！！mdzz???-->
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="connection.pool_size">5</prop>
                <prop key="hibernate.connection.characterEncoding">UTF-8</prop>
                <prop key="hibernate.connection.username">root</prop>
                <prop key="hibernate.connection.password">201919</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/test</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>


    <!-- 配置事务-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--<bean id="persistenceExceptionTranslationPostProcessor"-->
          <!--class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>-->

    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--&lt;!&ndash; 指定哪些方法需要加入事务，这里懒惰一下全部加入，可以使用通配符来只加入需要的方法 &ndash;&gt;-->
            <!--<tx:method name="insert*" propagation="REQUIRED" />-->
            <!--<tx:method name="update*" propagation="REQUIRED" />-->
            <!--<tx:method name="delete*" propagation="REQUIRED" />-->
            <!--<tx:method name="get*" propagation="REQUIRED" read-only="true"/>-->
            <!--<tx:method name="query*" propagation="REQUIRED" read-only="true"/>-->
            <!--<tx:method name="*" propagation="REQUIRED" />-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<aop:config>-->
        <!--<aop:pointcut expression="execution(* Service.*.*(..))"-->
                      <!--id="txPointcut"/>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>-->
    <!--</aop:config>-->

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
        <property name="checkWriteOperations" value="false"></property>
    </bean>
    <bean id="userDaoImpl" class="DaoImpl.userDaoImpl">
        <property name="hibernateTemplate" ref="hibernateTemplate"/>
    </bean>
    <bean id="userService" class="Service.Impl.userServiceImpl">
        <property name="userDao" ref="userDaoImpl"/>
    </bean>

    <!--ACtion -->
    <bean id="loginAction" class="Action.loginAction">
        <property name="UserService" ref="userService"/>
    </bean>
    <bean id="userQueryAction" class="Action.userQuertyAction">
        <property name="userService" ref="userService"/>
    </bean>
    <bean id="userAction" class="Action.userAction">
        <property name="userService" ref="userService"/>
    </bean>
    <bean id="deleteUserAction" class="Action.deleteUserAction">
        <property name="userService" ref="userService"/>
    </bean>
    <bean id="updateUserAction" class="Action.updateUserAction">
        <property name="userService" ref="userService"/>
    </bean>
</beans>